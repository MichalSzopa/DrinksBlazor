// <auto-generated />
using DrinksWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrinksWebApp.Migrations
{
    [DbContext(typeof(DrinksAppContext))]
    partial class DrinksAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.13");

            modelBuilder.Entity("DrinksWebApp.Models.AlcoholIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AlcoholVolume")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AlcoholIngredient", (string)null);
                });

            modelBuilder.Entity("DrinksWebApp.Models.AlcoholIngredientDrink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlcoholIngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DrinkId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlcoholIngredientId");

                    b.HasIndex("DrinkId");

                    b.ToTable("AlcoholIngredientDrink", (string)null);
                });

            modelBuilder.Entity("DrinksWebApp.Models.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Recipe")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Drink", (string)null);
                });

            modelBuilder.Entity("DrinksWebApp.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ingredient", (string)null);
                });

            modelBuilder.Entity("DrinksWebApp.Models.IngredientDrink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DrinkId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DrinkId");

                    b.HasIndex("IngredientId");

                    b.ToTable("IngredientDrink", (string)null);
                });

            modelBuilder.Entity("DrinksWebApp.Models.Opinion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DrinkId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rate")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DrinkId");

                    b.ToTable("Opinion", (string)null);
                });

            modelBuilder.Entity("DrinksWebApp.Models.AlcoholIngredientDrink", b =>
                {
                    b.HasOne("DrinksWebApp.Models.AlcoholIngredient", "AlcoholIngredient")
                        .WithMany("AlcoholIngredientDrinks")
                        .HasForeignKey("AlcoholIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrinksWebApp.Models.Drink", "Drink")
                        .WithMany("AlcoholIngredientDrinks")
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlcoholIngredient");

                    b.Navigation("Drink");
                });

            modelBuilder.Entity("DrinksWebApp.Models.IngredientDrink", b =>
                {
                    b.HasOne("DrinksWebApp.Models.Drink", "Drink")
                        .WithMany("IngredientDrinks")
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrinksWebApp.Models.Ingredient", "Ingredient")
                        .WithMany("IngredientDrinks")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("DrinksWebApp.Models.Opinion", b =>
                {
                    b.HasOne("DrinksWebApp.Models.Drink", "Drink")
                        .WithMany("Opinion")
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink");
                });

            modelBuilder.Entity("DrinksWebApp.Models.AlcoholIngredient", b =>
                {
                    b.Navigation("AlcoholIngredientDrinks");
                });

            modelBuilder.Entity("DrinksWebApp.Models.Drink", b =>
                {
                    b.Navigation("AlcoholIngredientDrinks");

                    b.Navigation("IngredientDrinks");

                    b.Navigation("Opinion");
                });

            modelBuilder.Entity("DrinksWebApp.Models.Ingredient", b =>
                {
                    b.Navigation("IngredientDrinks");
                });
#pragma warning restore 612, 618
        }
    }
}
